{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "TypeScript and JavaScript Language Features",
			"description": "Provides rich language support for JavaScript and TypeScript.",
			"reloadProjects.title": "Перезавантажити Проект",
			"configuration.typescript": "TypeScript",
			"configuration.suggest.completeFunctionCalls": "Повний набір функцій з їх підписом параметра.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires TS 3.7+ and strict null checks to be enabled.",
			"typescript.tsdk.desc": "Specifies the folder path to the tsserver and lib*.d.ts files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.\n\n- When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.\n- When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.\n\nSee the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.",
			"typescript.disableAutomaticTypeAcquisition": "Disables automatic type acquisition. Automatic type acquisition fetches `@types` packages from npm to improve IntelliSense for external libraries.",
			"typescript.tsserver.log": "Дає можливість ведення журналу сервера TS до файлу. Цей журнал можуть використовуватися для діагностики сервер TS питання. Журнал може містити шляхи до файлів, вихідний код і іншу потенційно конфіденційну інформацію з вашого проекту.",
			"typescript.tsserver.pluginPaths": "Additional paths to discover TypeScript Language Service plugins. Requires using TypeScript 2.3.0 or newer in the workspace.",
			"typescript.tsserver.pluginPaths.item": "Either an absolute or relative path. Relative path will be resolved against workspace folder(s).",
			"typescript.tsserver.trace": "Дає можливість відстеження повідомлень, надісланих на сервер TS. Це трасування можна використовувати для діагностики проблем із сервером TS. Трасування може містити шляхи до файлів, вихідний код і іншу потенційно конфіденційну інформацію з вашого проекту.",
			"typescript.validate.enable": "On/off TypeScript перевірку.",
			"typescript.format.enable": "On/off TypeScript форматування за замовчуванням.",
			"javascript.format.enable": "On/off JavaScript форматування за замовчуванням.",
			"format.insertSpaceAfterCommaDelimiter": "Визначає вільний простір після коми.",
			"format.insertSpaceAfterConstructor": "Defines space handling after the constructor keyword. Requires using TypeScript 2.3.0 or newer in the workspace.",
			"format.insertSpaceAfterSemicolonInForStatements": "Defines space handling after a semicolon in a for statement.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Визначає обробку пробілів після бінарного оператора.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Визначає обробку пробілів після запитів у інструкції управління потоком.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Визначає обробку пробілів після ключового слова function для анонімних функцій.",
			"format.insertSpaceBeforeFunctionParenthesis": "Defines space handling before function argument parentheses.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Defines space handling after opening and before closing non-empty parenthesis.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Defines space handling after opening and before closing non-empty brackets.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Defines space handling after opening and before closing non-empty braces. Requires using TypeScript 2.3.0 or newer in the workspace.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Defines space handling after opening and before closing template string braces.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Defines space handling after opening and before closing JSX expression braces.",
			"format.insertSpaceAfterTypeAssertion": "Defines space handling after type assertions in TypeScript. Requires using TypeScript 2.4 or newer in the workspace.",
			"format.placeOpenBraceOnNewLineForFunctions": "Визначає, чи відкрити дужку з нового рядку для функції чи ні.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Визначає, чи відкрити дужку з нового рядку для блоків управління чи ні.",
			"format.semicolons": "Defines handling of optional semicolons. Requires using TypeScript 3.7 or newer in the workspace.",
			"format.semicolons.ignore": "Don't insert or remove any semicolons.",
			"format.semicolons.insert": "Insert semicolons at statement ends.",
			"format.semicolons.remove": "Remove unnecessary semicolons.",
			"javascript.validate.enable": "On/off JavaScript перевірку.",
			"goToProjectConfig.title": "Перейдіть в Налаштування проекту",
			"javascript.referencesCodeLens.enabled": "Включити/відключити посилання codelens в JavaScript.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Enable/disable references CodeLens on all functions in JavaScript files.",
			"typescript.referencesCodeLens.enabled": "Enable/disable references CodeLens in TypeScript files.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Enable/disable references CodeLens on all functions in TypeScript files.",
			"typescript.implementationsCodeLens.enabled": "Enable/disable implementations CodeLens. This CodeLens shows the implementers of an interface.",
			"typescript.openTsServerLog.title": "Відкритий сервер TS журналу",
			"typescript.restartTsServer": "Перезапустіть сервер TS",
			"typescript.selectTypeScriptVersion.title": "Select TypeScript Version...",
			"typescript.reportStyleChecksAsWarnings": "Report style checks as warnings.",
			"javascript.implicitProjectConfig.checkJs": "Enable/disable semantic checking of JavaScript files. Existing jsconfig.json or tsconfig.json files override this setting. Requires using TypeScript 2.3.1 or newer in the workspace.",
			"typescript.npm": "Specifies the path to the npm executable used for Automatic Type Acquisition. Requires using TypeScript 2.3.4 or newer in the workspace.",
			"typescript.check.npmIsInstalled": "Перевірте, чи встановлено NPM для автоматичного отримання типу.",
			"configuration.suggest.names": "Enable/disable including unique names from the file in JavaScript suggestions. Note that name suggestions are always disabled in JavaScript code that is semantically checked using `@ts-check` or `checkJs`.",
			"typescript.tsc.autoDetect": "Controls auto detection of tsc tasks.",
			"typescript.tsc.autoDetect.off": "Disable this feature.",
			"typescript.tsc.autoDetect.on": "Create both build and watch tasks.",
			"typescript.tsc.autoDetect.build": "Only create single run compile tasks.",
			"typescript.tsc.autoDetect.watch": "Only create compile and watch tasks.",
			"typescript.problemMatchers.tsc.label": "TypeScript проблеми",
			"typescript.problemMatchers.tscWatch.label": "TypeScript проблеми (режим спостереження)",
			"configuration.suggest.paths": "Enable/disable suggestions for paths in import statements and require calls.",
			"configuration.tsserver.useSeparateSyntaxServer": "Enable/disable spawning a separate TypeScript server that can more quickly respond to syntax related operations, such as calculating folding or computing document symbols. Requires using TypeScript 3.4.0 or newer in the workspace.",
			"configuration.tsserver.maxTsServerMemory": "Set the maximum amount of memory (in MB) to allocate to the TypeScript server process",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "(Experimental) Enables project wide error reporting.",
			"typescript.locale": "Sets the locale used to report JavaScript and TypeScript errors. Requires using TypeScript 2.6.0 or newer in the workspace. Default of `null` uses VS Code's locale.",
			"javascript.implicitProjectConfig.experimentalDecorators": "Enable/disable `experimentalDecorators` for JavaScript files that are not part of a project. Existing jsconfig.json or tsconfig.json files override this setting. Requires using TypeScript 2.3.1 or newer in the workspace.",
			"configuration.suggest.autoImports": "Enable/disable auto import suggestions. Requires using TypeScript 2.6.1 or newer in the workspace.",
			"taskDefinition.tsconfig.description": "The tsconfig file that defines the TS build.",
			"javascript.suggestionActions.enabled": "Enable/disable suggestion diagnostics for JavaScript files in the editor. Requires using TypeScript 2.8 or newer in the workspace.",
			"typescript.suggestionActions.enabled": "Enable/disable suggestion diagnostics for TypeScript files in the editor. Requires using TypeScript 2.8 or newer in the workspace.",
			"typescript.preferences.quoteStyle": "Preferred quote style to use for quick fixes: `single` quotes, `double` quotes, or `auto` infer quote type from existing imports. Requires using TypeScript 2.9 or newer in the workspace.",
			"typescript.preferences.importModuleSpecifier": "Preferred path style for auto imports.",
			"typescript.preferences.importModuleSpecifier.auto": "Automatically select import path style. Prefers using a relative import if `baseUrl` is configured and the relative path has fewer segments than the non-relative import.",
			"typescript.preferences.importModuleSpecifier.relative": "Relative to the file location.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Based on the `baseUrl` configured in your `jsconfig.json` / `tsconfig.json`.",
			"typescript.preferences.importModuleSpecifierEnding": "Preferred path ending for auto imports.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Use project settings to select a default.",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "Shorten `./component/index.js` to `./component`.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Shorten `./component/index.js` to `./component/index`",
			"typescript.preferences.importModuleSpecifierEnding.js": "Do not shorten path endings; include the `.js` extension.",
			"typescript.updateImportsOnFileMove.enabled": "Enable/disable automatic updating of import paths when you rename or move a file in VS Code. Requires using TypeScript 2.9 or newer in the workspace.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Prompt on each rename.",
			"typescript.updateImportsOnFileMove.enabled.always": "Always update paths automatically.",
			"typescript.updateImportsOnFileMove.enabled.never": "Never rename paths and don't prompt.",
			"typescript.autoClosingTags": "Enable/disable automatic closing of JSX tags. Requires using TypeScript 3.0 or newer in the workspace.",
			"typescript.suggest.enabled": "Enabled/disable autocomplete suggestions.",
			"configuration.surveys.enabled": "Enabled/disable occasional surveys that help us improve VS Code's JavaScript and TypeScript support.",
			"configuration.suggest.completeJSDocs": "Enable/disable suggestion to complete JSDoc comments.",
			"configuration.tsserver.watchOptions": "Configure which watching strategies should be used to keep track of files and directories. Requires using TypeScript 3.8+ in the workspace.",
			"configuration.tsserver.watchOptions.watchFile": "Strategy for how individual files are watched.",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Check every file for changes several times a second at a fixed interval.",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Use a dynamic queue where less-frequently modified files will be checked less often.",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Attempt to use the operating system/file system’s native events for file changes.",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Attempt to use the operating system/file system’s native events to listen for changes on a file’s containing directories. This can use fewer file watchers, but might be less accurate.",
			"configuration.tsserver.watchOptions.watchDirectory": "Strategy for how entire directory trees are watched under systems that lack recursive file-watching functionality.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Check every directory for changes several times a second at a fixed interval.",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Use a dynamic queue where less-frequently modified directories will be checked less often.",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Attempt to use the operating system/file system’s native events for directory changes.",
			"configuration.tsserver.watchOptions.fallbackPolling": "When using file system events, this option specifies the polling strategy that gets used when the system runs out of native file watchers and/or doesn’t support native file watchers.",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Check every file for changes several times a second at a fixed interval.",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ": "Use a dynamic queue where less-frequently modified files will be checked less often.",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Disable deferred watching on directories. Deferred watching is useful when lots of file changes might occur at once (e.g. a change in node_modules from running npm install), but you might want to disable it with this flag for some less-common setups.",
			"typescript.preferences.renameShorthandProperties": "Enable/disable introducing aliases for object shorthand properties during renames. Requires using TypeScript 3.4 or newer in the workspace.",
			"codeActions.refactor.extract.constant.title": "Extract constant",
			"codeActions.refactor.extract.constant.description": "Extract expression to constant.",
			"codeActions.refactor.extract.function.title": "Extract function",
			"codeActions.refactor.extract.function.description": "Extract expression to method or function.",
			"codeActions.refactor.extract.type.title": "Extract type",
			"codeActions.refactor.extract.type.description": "Extract type to a type alias.",
			"codeActions.refactor.extract.interface.title": "Extract interface",
			"codeActions.refactor.extract.interface.description": "Extract type to an interface.",
			"codeActions.refactor.rewrite.import.title": "Convert import",
			"codeActions.refactor.rewrite.import.description": "Convert between named imports and namespace imports.",
			"codeActions.refactor.rewrite.export.title": "Convert export",
			"codeActions.refactor.rewrite.export.description": "Convert between default export and named export.",
			"codeActions.refactor.move.newFile.title": "Move to a new file",
			"codeActions.refactor.move.newFile.description": "Move the expression to a new file.",
			"codeActions.refactor.rewrite.arrow.braces.title": "Rewrite arrow braces",
			"codeActions.refactor.rewrite.arrow.braces.description": "Add or remove braces in an arrow function.",
			"codeActions.refactor.rewrite.parameters.toDestructured.title": "Convert parameters to destructured object",
			"codeActions.refactor.rewrite.property.generateAccessors.title": "Generate accessors",
			"codeActions.refactor.rewrite.property.generateAccessors.description": "Generate 'get' and 'set' accessors",
			"codeActions.source.organizeImports.title": "Organize imports"
		},
		"dist/utils/api": {
			"invalidVersion": "Невірна версія"
		},
		"dist/utils/tsconfig": {
			"typescript.configureTsconfigQuickPick": "Configure tsconfig.json",
			"typescript.configureJsconfigQuickPick": "Configure jsconfig.json",
			"typescript.noTypeScriptProjectConfig": "File is not part of a TypeScript project. Click [here]({0}) to learn more.",
			"typescript.noJavaScriptProjectConfig": "File is not part of a JavaScript project Click [here]({0}) to learn more.",
			"typescript.projectConfigNoWorkspace": "Please open a folder in VS Code to use a TypeScript or JavaScript project",
			"typescript.projectConfigUnsupportedFile": "Could not determine TypeScript or JavaScript project. Unsupported file type",
			"typescript.projectConfigCouldNotGetInfo": "Could not determine TypeScript or JavaScript project"
		},
		"dist/features/baseCodeLensProvider": {
			"referenceErrorLabel": "Не можу визначити посилання"
		},
		"dist/features/completions": {
			"selectCodeAction": "Виберіть дію коду, яку потрібно застосувати",
			"acquiringTypingsLabel": "Придбання typings...",
			"acquiringTypingsDetail": "Придбання typings визначень для IntelliSense.",
			"autoImportLabel": "Автоматичний імпорт з {0}"
		},
		"dist/features/directiveCommentCompletions": {
			"ts-check": "Включає семантичні перевірки в файлі JavaScript. Повинні бути у верхній частині файлу.",
			"ts-nocheck": "Виключає семантичнуперевірку в файлі JavaScript. Повинні бути у верхній частині файлу.",
			"ts-ignore": "Пригнічує @ts-check помилки в наступному рядку файлу.",
			"ts-expect-error": "Suppresses @ts-check errors on the next line of a file, expecting at least one to exist."
		},
		"dist/features/implementationsCodeLens": {
			"oneImplementationLabel": "1 реалізація",
			"manyImplementationLabel": "{0} реалізацій"
		},
		"dist/features/jsDocCompletions": {
			"typescript.jsDocCompletionItem.documentation": "JSDoc коментарі"
		},
		"dist/features/organizeImports": {
			"organizeImportsAction.title": "Organize Imports"
		},
		"dist/features/quickFix": {
			"fixAllInFileLabel": "{0} (Fix all in file)"
		},
		"dist/features/fixAll": {
			"autoFix.label": "Auto fix"
		},
		"dist/features/refactor": {
			"refactoringFailed": "Could not apply refactoring",
			"extractConstant.disabled.title": "Extract to constant",
			"extractConstant.disabled.reason": "The current selection cannot be extracted",
			"extractFunction.disabled.title": "Extract to function",
			"extractFunction.disabled.reason": "The current selection cannot be extracted",
			"refactor.documentation.title": "Learn more about JS/TS refactorings"
		},
		"dist/features/referencesCodeLens": {
			"oneReferenceLabel": "1 посилання",
			"manyReferenceLabel": "{0} посилань"
		},
		"dist/features/rename": {
			"fileRenameFail": "An error occurred while renaming file"
		},
		"dist/typescriptServiceClient": {
			"noServerFound": "Шлях {0} не вказує на допустимий tsserver установки. Повернутися до пакетної TypeScript версії.",
			"serverExitedWithError": "TypeScript language server exited with error. Error message is: {0}",
			"typescript.openTsServerLog.loggingNotEnabled": "Сервер TS журналювання не включено. Будь ласка, встановіть `typescript.tsserver.log` і перезавантажте сервер TS, щоб увімкнути журналювання",
			"typescript.openTsServerLog.enableAndReloadOption": "Увімкнути журналювання і перезапустити сервер TS",
			"typescript.openTsServerLog.noLogFile": "Сервер TS не розпочав ведення журналу.",
			"openTsServerLog.openFileFailedFailed": "Не вдалося відкрити файл журналу сервера TS",
			"serverDiedReportIssue": "Звіт",
			"serverDiedAfterStart": "Сервіс TypeScript мови помер 5 разів відразу після його старту. Сервіс не буде перезапущений.",
			"serverDied": "Сервіс TypeScript мови несподівано помер 5 разів за останні 5 хвилин.",
			"serverDiedOnce": "The TypeScript language service died unexpectedly.",
			"serverLoading.progress": "Initializing JS/TS language features"
		},
		"dist/utils/logger": {
			"channelName": "TypeScript"
		},
		"dist/utils/versionManager": {
			"selectTsVersion": "Виберіть Тypescript версія використовувати для JavaScript і Тypescript особливостей",
			"useVSCodeVersionOption": "Використовувати VS Code версію",
			"useWorkspaceVersionOption": "Використання робочого простору версію",
			"learnMore": "Learn more about managing TypeScript versions"
		},
		"dist/utils/versionProvider": {
			"couldNotLoadTsVersion": "Не вдалося завантажити Тypescript версію на цьому шляху",
			"noBundledServerFound": "VS Code's Tsserver був видалений іншою програмою, такою як інструмент виявлення вірусів за поведінкою. Будь ласка, переустановіть VS Code."
		},
		"dist/utils/typingsStatus": {
			"installingPackages": "Дані вибірки для кращого TypeScript технології intellisense",
			"typesInstallerInitializationFailed.title": "Could not install typings files for JavaScript language features. Please ensure that NPM is installed or configure 'typescript.npm' in your user settings. Click [here]({0}) to learn more.",
			"typesInstallerInitializationFailed.doNotCheckAgain": "Не показувати знову"
		},
		"dist/utils/versionStatus": {
			"projectQuickPick.placeholder": "TypeScript Project Info",
			"projectQuickPick.version.label": "Select TypeScript Version...",
			"projectQuickPick.project.create": "Create tsconfig",
			"projectQuickPick.project.create.description": "This file is currently not part of a tsconfig/jsconfig project",
			"projectQuickPick.version.goProjectConfig": "Open tsconfig",
			"projectQuickPick.help": "TypeScript help",
			"projectInfo.name": "TypeScript: Project Info"
		},
		"dist/features/updatePathsOnRename": {
			"renameProgress.title": "Checking for update of JS/TS imports",
			"prompt": "Update imports for '{0}'?",
			"promptMoreThanOne": "Update imports for the following {0} files?",
			"reject.title": "Ні",
			"accept.title": "Так",
			"always.title": "Always automatically update imports",
			"never.title": "Never automatically update imports",
			"moreFile": "...1 additional file not shown",
			"moreFiles": "...{0} додаткові файли не показані"
		},
		"dist/utils/largeProjectStatus": {
			"statusExclude": "TypeScript: Configure Excludes",
			"hintExclude": "Для включення проекту в JavaScript/typescript мовні особливості, виключити папки з великою кількістю файлів, наприклад: {0}",
			"hintExclude.generic": "Для включення проекту в JavaScript/typescript мовні можливості, виключити великі папки з вихідними файлами, на яких ви не працюєте.",
			"large.label": "Настроювання виключень",
			"hintExclude.tooltip": "Для включення проекту в JavaScript/typescript мовні можливості, виключити великі папки з вихідними файлами, на яких ви не працюєте."
		},
		"dist/features/task": {
			"badTsConfig": "TypeScript Task in tasks.json contains \"\\\\\". TypeScript tasks tsconfig must use \"/\"",
			"buildTscLabel": "будувати - {0}",
			"buildAndWatchTscLabel": "дивитися - {0}"
		}
	}
}