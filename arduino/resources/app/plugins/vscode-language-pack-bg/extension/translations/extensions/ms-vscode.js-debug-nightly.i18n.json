{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"add.browser.breakpoint": "Add Browser Breakpoint",
			"attach.node.process": "Attach to Node Process (preview)",
			"browser.address.description": "TCP/IP адрес на порта за отстраняване на грешки",
			"browser.baseUrl.description": "Base URL to resolve paths baseUrl. baseURL is trimmed when mapping URLs to the files on disk. Defaults to the launch URL domain.",
			"browser.cwd.description": "Работна папка за изпълнимия файл (незадължително).",
			"browser.disableNetworkCache.description": "Определя дали да се пропуска мрежовия кеш при всяка заявка",
			"browser.env.description": "Optional dictionary of environment key/value pairs for the browser.",
			"browser.file.description": "Местен файл HTML, който да се отвори в браузъра",
			"browser.includeDefaultArgs.description": "Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.",
			"browser.inspectUri.description": "Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n",
			"browser.pathMapping.description": "A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk",
			"browser.port.description": "Port to use for remote debugging the browser.",
			"browser.runtimeArgs.description": "Аргументи, които да бъдат подадени на изпълнимия файл (незадължително).",
			"browser.runtimeExecutable.description": "Either 'canary', 'stable', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or CHROME_PATH environment variable.",
			"browser.server.description": "Configures a web server to start up. Takes the same configuration as the 'node' launch task.",
			"browser.skipFiles.description": "Масив от имена на файлове или папки, или шаблони на пътища, които да бъдат пропускани при дебъгване.",
			"browser.smartStep.description": "Автоматично пристъпване през неразпознатите редове във файловете с кодови съответствия. Това може да бъде, например, кодът, който Typescript създава автоматично при компилиране на функционалности като async/await и др.",
			"browser.sourceMapPathOverrides.description": "Набор от съответствия за замяна на местоположенията на изходните файлове от това, което е посочено в кодовото съответствие, към истинските местоположения на диска. Вижте файла „README“ за повече подробности.",
			"browser.sourceMaps.description": "Използване на кодови съответствия на JavaScript (ако съществуват).",
			"browser.timeout.description": "Retry for this number of milliseconds to connect to the browser. Default is 10000 ms.",
			"browser.url.description": "Will search for a tab with this exact url and attach to it, if found",
			"browser.urlFilter.description": "Ще се търси страница с този адрес и ще се прикачи към него, ако бъде намерен. Може да съдържа „*“ за заместване.",
			"browser.userDataDir.description": "By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile.",
			"browser.webRoot.description": "Това указва пълния път на работното място до основната папка на уеб-сървъра. Използва се за откриване на пътища като `/app.js` до файлове на диска. Това е съкратен вид `pathMapping` за `/`.",
			"chrome.attach.description": "Attach to an instance of Chrome already in debug mode",
			"chrome.attach.label": "Chrome: Attach",
			"chrome.label": "Chrome (preview)",
			"chrome.launch.description": "Launch Chrome to debug a URL",
			"chrome.launch.label": "Chrome: Launch",
			"configuration.automaticallyTunnelRemoteServer": "When debugging a remote web app, configures whether to automatically tunnel the remote server to your local machine.",
			"configuration.debugByLinkOptions": "Options used when debugging open links clicked from inside the debug terminal. Can be set to \"false\" to disable this behavior.",
			"configuration.npmScriptLensLocation": "Where a \"Run\" and \"Debug\" code lens should be shown in your npm scripts. It may be on \"all\", scripts, on \"top\" of the script section, or \"never\".",
			"configuration.suggestPrettyPrinting": "Whether to suggest pretty printing JavaScript code that looks minified when you step into it.",
			"configuration.terminalOptions": "Default launch options for the JavaScript debug terminal and npm scripts.",
			"configuration.usePreview": "Use the new in-preview JavaScript debugger for Node.js and Chrome.",
			"configuration.warnOnLongPrediction": "Whether a loading prompt should be shown if breakpoint prediction takes a while.",
			"debug.npm.edit": "Edit package.json",
			"debug.npm.noScripts": "No npm scripts found in your package.json",
			"debug.npm.noWorkspaceFolder": "You need to open a workspace folder to debug npm scripts.",
			"debug.npm.parseError": "Could not read {0}: {1}",
			"debug.npm.script": "Debug NPM Script",
			"debug.terminal.label": "Create JavaScript Debug Terminal",
			"debug.terminal.program.description": "Command to run in the launched terminal. If not provided, the terminal will open without launching a program.",
			"debug.terminal.snippet.label": "Run \"npm start\" in a debug terminal",
			"debug.terminal.welcome": "[Node.js Debug Terminal](command:extension.pwa-node-debug.createDebuggerTerminal)\n\nYou can use the Node.js Debug Terminal to instantly debug JavaScript you run from the command line.",
			"edge.attach.description": "Attach to an instance of Edge already in debug mode",
			"edge.attach.label": "Edge: Attach",
			"edge.label": "Edge (preview)",
			"edge.launch.description": "Launch Edge to debug a URL",
			"edge.launch.label": "Edge: Launch",
			"edge.useWebView.description": "(Edge (Chromium) only) When 'true', the debugger will treat the runtime executable as a host application that contains a WebView allowing you to debug the WebView script content.",
			"errors.timeout": "{0}: timeout after {1}ms",
			"extension.description": "An extension for debugging Node.js programs and Chrome.",
			"extensionHost.label": "VS Code Extension Development (preview)",
			"extensionHost.launch.config.name": "Пускане на разширението",
			"extensionHost.launch.env.description": "Променливи на средата, които да бъдат подадени към сървъра за разширения.",
			"extensionHost.launch.runtimeExecutable.description": "Пълен път до VS Code.",
			"extensionHost.launch.stopOnEntry.description": "Автоматично спиране на сървъра за разширения след стартиране.",
			"extensionHost.snippet.launch.description": "Пускане на разширение на VS Code в режим за дебъгване",
			"extensionHost.snippet.launch.label": "Разработка на разширения за VS Code",
			"longPredictionWarning.disable": "Да не се показва повече",
			"longPredictionWarning.message": "It's taking a while to configure your breakpoints. You can speed this up by updating the 'outFiles' in your launch.json.",
			"longPredictionWarning.noFolder": "No workspace folder open.",
			"longPredictionWarning.open": "Open launch.json",
			"node.address.description": "TCP/IP address of process to be debugged. Default is 'localhost'.",
			"node.attach.attachExistingChildren.description": "Whether to attempt to attach to already-spawned child processes.",
			"node.attach.attachSpawnedProcesses.description": "Whether to set environment variables in the attached process to track spawned children.",
			"node.attach.config.name": "Прикачане",
			"node.attach.continueOnAttach": "If true, we'll automatically resume programs launched and waiting on `--inspect-brk`",
			"node.attach.processId.description": "Ид. на процеса, към който да се прикачи.",
			"node.attach.restart.description": "Try to reconnect to the program if we lose connection.",
			"node.console.title": "Конзола за дебъгване на node",
			"node.disableOptimisticBPs.description": "Да не се задават точки на прекъсване във файл, докато кодовото съответствие за него не бъде заредено.",
			"node.label": "Node.js (preview)",
			"node.launch.args.description": "Аргументи за команден ред, които да бъдат подадени на програмата.",
			"node.launch.autoAttachChildProcesses.description": "Автоматично прикачане на дебъгера към новите дъщерни процеси.",
			"node.launch.config.name": "Пускане",
			"node.launch.console.description": "Къде да бъде изпълнена целта за дебъгване.",
			"node.launch.console.externalTerminal.description": "Външен терминал, който може да бъде определен в потребителските настройки",
			"node.launch.console.integratedTerminal.description": "Вграден терминал на VS Code",
			"node.launch.console.internalConsole.description": "Конзола за дебъгване на VS Code (която не поддържа възможност за четене на въвеждани данни от програма)",
			"node.launch.cwd.description": "Пълен път до работната папка на програмата, която се дебъгва.",
			"node.launch.env.description": "Променливи на средата, които да бъдат подадени към програмата. Стойността `null` премахва променливата от средата.",
			"node.launch.envFile.description": "Пълен път до файл, съдържащ дефиниции на променливи на средата.",
			"node.launch.logging": "Logging configuration",
			"node.launch.logging.cdp": "Path to the log file for Chrome DevTools Protocol messages",
			"node.launch.logging.dap": "Path to the log file for Debug Adapter Protocol messages",
			"node.launch.outputCapture.description": "Откъде да се прихващат изведените съобщения. Това може да бъде ППИ за дебъгване, или потоците „stdout“ и „stderr“.",
			"node.launch.program.description": "Пълен път до програмата. Генерираната стойност е предполагаема и се основава на данните от package.json и отворените файлове. Редактирайте този атрибут.",
			"node.launch.restart.description": "Try to restart the program if it exits with a non-zero exit code.",
			"node.launch.runtimeArgs.description": "Аргументи, които да бъдат подадени на изпълнимия файл (незадължително).",
			"node.launch.runtimeExecutable.description": "Изпълнима среда, която да се използва. Това трябва да бъде или абсолютен път, или име на изпълнима среда, която е налична в PATH. Ако няма стойност, ще се използва `node`.",
			"node.launch.runtimeVersion.description": "Версия на средата за изпълнение на `node`, която да се ползва. Изисква `nvm`.",
			"node.launch.useWSL.deprecation": "'useWSL' is deprecated and support for it will be dropped. Use the 'Remote - WSL' extension instead.",
			"node.launch.useWSL.description": "Използване на подсистемата за изпълнение на Линукс под Windows.",
			"node.localRoot.description": "Път до местната папка, съдържаща програмата.",
			"node.pauseForSourceMap.description": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
			"node.port.description": "Порт за дебъгване, към който да се прикачи. По подразбиране: 5858.",
			"node.processattach.config.name": "Прикачане към процес",
			"node.remoteRoot.description": "Пълен път до отдалечената папка, съдържаща програмата.",
			"node.resolveSourceMapLocations.description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
			"node.showAsyncStacks.description": "Показване на асинхронните извиквания, които са довели до текущия стек на извикванията.",
			"node.snippet.attach.description": "Прикачане към работеща програма на node",
			"node.snippet.attach.label": "Node.js: Прикачане",
			"node.snippet.attachProcess.description": "Отваряне на прозореца за избор на процес за избиране на процес на node за прикачане",
			"node.snippet.attachProcess.label": "Node.js: Прикачане към процес",
			"node.snippet.electron.description": "Дебъгване на процеса „main“ на Electron",
			"node.snippet.electron.label": "Node.js: Процес „main“ на Electron",
			"node.snippet.gulp.description": "Дебъгване на задача на gulp (уверете се, че имате местен gulp инсталиран в проекта)",
			"node.snippet.gulp.label": "Node.js: Задача на gulp",
			"node.snippet.launch.description": "Пускане на програма на node в режим за дебъгване",
			"node.snippet.launch.label": "Node.js: Пускане на програма",
			"node.snippet.mocha.description": "Дебъгване на тестовете на mocha",
			"node.snippet.mocha.label": "Node.js: Тестове на mocha",
			"node.snippet.nodemon.description": "Използване на nodemon за рестартиране на дебъгването при промяна на изходния код",
			"node.snippet.nodemon.label": "Node.js: Настройка на nodemon",
			"node.snippet.npm.description": "Пускане на програма на node чрез скрипт `debug` на npm за дебъгване",
			"node.snippet.npm.label": "Node.js: Пускане чрез NPM",
			"node.snippet.remoteattach.description": "Прикачане към порта за дебъгване на отдалечена програма на node",
			"node.snippet.remoteattach.label": "Node.js: Прикачане към отдалечена програма",
			"node.snippet.yo.description": "Дебъгване на генератора yeoman (инсталирайте го като изпълните `npm link` в папката на проекта)",
			"node.snippet.yo.label": "Node.js: Генератор yeoman",
			"node.sourceMapPathOverrides.description": "Набор от съответствия за замяна на местоположенията на изходните файлове от това, което е посочено в кодовото съответствие, към истинските местоположения на диска.",
			"node.sourceMaps.description": "Използване на кодови съответствия на JavaScript (ако съществуват).",
			"node.stopOnEntry.description": "Автоматично спиране на програмата след стартиране.",
			"node.timeout.description": "Това е период (в милисекунди), в който ще се правят опити за свързване с Node.js. По подразбиране стойността е 10000 мсек.",
			"outFiles.description": "Ако са включени кодовите съответствия, тези шаблони посочват създадените файлове на JavaScript. Ако някой шаблон започва с `!`, то разпознатите от него файлове се изключват. Ако това не е посочено, се очаква създаденият код да бъде в същата папка като оригиналния.",
			"pretty.print.script": "Pretty print for debugging",
			"profile.start": "Take Performance Profile",
			"profile.stop": "Stop Performance Profile",
			"remove.browser.breakpoint": "Remove Browser Breakpoint",
			"remove.browser.breakpoint.all": "Remove All Browser Breakpoints",
			"skipFiles.description": "An array of glob patterns for files to skip when debugging. The pattern `<node_internals>/**` matches all internal Node.js modules.",
			"smartStep.description": "Автоматично преминаване през произведения код, който не може да бъде свързан с оригиналния изходен код.",
			"start.with.stop.on.entry": "Стартиране на дебъгването и спиране в началото",
			"toggle.skipping.this.file": "Превключване на пропускането на този файл",
			"trace.boolean.description": "Trace may be set to 'true' to write diagnostic logs to the disk.",
			"trace.console.description": "Configures whether logs are also returned to the debug console.",
			"trace.description": "Configures what diagnostic output is produced.",
			"trace.level.description": "Configures the level of logs recorded.",
			"trace.logFile.description": "Configures where on disk logs are written.",
			"trace.stdio.description": "Whether to return trace data from the launched application or browser.",
			"trace.tags.description": "Configures what types of logs are recorded."
		}
	}
}