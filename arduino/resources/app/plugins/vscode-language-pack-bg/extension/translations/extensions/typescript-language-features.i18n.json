{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "Функционалности за езиците TypeScript и JavaScript",
			"description": "Осигурява поддръжка на файлове с код на JavaScript и TypeScript.",
			"reloadProjects.title": "Презареждане на проекта",
			"configuration.typescript": "TypeScript",
			"configuration.suggest.completeFunctionCalls": "Попълване на функциите с параметрите им.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires TS 3.7+ and strict null checks to be enabled.",
			"typescript.tsdk.desc": "Specifies the folder path to the tsserver and lib*.d.ts files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.\n\n- When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.\n- When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.\n\nSee the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.",
			"typescript.disableAutomaticTypeAcquisition": "Изключва автоматичното усвояване на типове. Автоматичното усвояване на типове извлича пакети `@types` от npm за подобряване на разпознаването на синтаксиса за външни библиотеки.",
			"typescript.tsserver.log": "Включва извеждането на журнала на сървъра на TypeScript във файл. Този журнал може да бъде използван за изследване на проблеми със сървъра на TypeScript. Журналът може да съдържа файлови пътища, изходен код и друга вътрешна информация от проекта Ви.",
			"typescript.tsserver.pluginPaths": "Допълнителни пътища, в които да се търсят добавки с услуги за езика Typescript. Изисква да се използва версия на TypeScript >= 2.3.0 в работното място.",
			"typescript.tsserver.pluginPaths.item": "Трябва да бъде пълен или относителен път. Относителните пътища трябва да бъдат спрямо папката (или папките) на работното място.",
			"typescript.tsserver.trace": "Включва проследяването на съобщенията, изпращани към сървъра на TypeScript. Това може да бъде използвано за изследване на проблеми със сървъра на TypeScript. Проследяването може да съдържа файлови пътища, изходен код и друга вътрешна информация от проекта Ви.",
			"typescript.validate.enable": "Включване/изключване на валидирането на TypeScript.",
			"typescript.format.enable": "Включване/изключване на форматирането на TypeScript по подразбиране.",
			"javascript.format.enable": "Включване/изключване на форматирането на JavaScript по подразбиране.",
			"format.insertSpaceAfterCommaDelimiter": "Определя какво да се прави с интервалите след разделител запетая.",
			"format.insertSpaceAfterConstructor": "Определя какво да се прави с интервалите след ключовата дума „constructor“. Изисква да се използва версия на TypeScript >= 2.3.0 в работното място.",
			"format.insertSpaceAfterSemicolonInForStatements": "Определя какво да се прави с интервалите след точка и запетая в цикъл „for“.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Определя какво да се прави с интервалите след бинарен оператор.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Определя какво да се прави с интервалите след ключовите думи в изразите, управляващи реда на изпълнение.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Определя какво да се прави с интервалите след ключовата дума „function“ за анонимни функции.",
			"format.insertSpaceBeforeFunctionParenthesis": "Определя какво да се прави с интервалите пред скобите за параметрите на функциите.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Определя какво да се прави с интервалите след отваряне и преди затваряне на непразни скоби.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Определя какво да се прави с интервалите след отваряне и преди отваряне на непразни квадратни скоби.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Определя какво да се прави с интервалите след отваряне и преди затваряне на непразни къдрави скоби. Изисква да се използва версия на TypeScript >= 2.3.0 в работното място.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Определя какво да се прави с интервалите след отваряне и преди отваряне на ъглови скоби за шаблон.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Определя какво да се прави с интервалите след отваряне и преди отваряне на скоби за израз на JSX.",
			"format.insertSpaceAfterTypeAssertion": "Определя какво да се прави с интервалите след преобразуване на тип чрез „<>“ в TypeScript. Изисква да се използва версия на TypeScript >= 2.4 в работното място.",
			"format.placeOpenBraceOnNewLineForFunctions": "Определя дали отварящата къдрава скоба на функциите да бъде поставяна на нов ред или не.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Определя дали отварящата къдрава скоба на управляващите изрази да бъде поставяна на нов ред или не.",
			"format.semicolons": "Defines handling of optional semicolons. Requires using TypeScript 3.7 or newer in the workspace.",
			"format.semicolons.ignore": "Don't insert or remove any semicolons.",
			"format.semicolons.insert": "Insert semicolons at statement ends.",
			"format.semicolons.remove": "Remove unnecessary semicolons.",
			"javascript.validate.enable": "Включване/изключване на валидацията на JavaScript.",
			"goToProjectConfig.title": "Към настройките на проекта",
			"javascript.referencesCodeLens.enabled": "Включване/изключване на лещата за код за местата на използване в файлове на JavaScript.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Enable/disable references CodeLens on all functions in JavaScript files.",
			"typescript.referencesCodeLens.enabled": "Включване/изключване на лещата за код за местата на използване в файлове на TypeScript.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Enable/disable references CodeLens on all functions in TypeScript files.",
			"typescript.implementationsCodeLens.enabled": "Включване/изключване на лещата за код. Лещата за код показва имплементациите а даден интерфейс.",
			"typescript.openTsServerLog.title": "Отваряне на журнала на сървъра на TypeScript",
			"typescript.restartTsServer": "Рестартиране на сървъра на TypeScript",
			"typescript.selectTypeScriptVersion.title": "Select TypeScript Version...",
			"typescript.reportStyleChecksAsWarnings": "Докладване на стиловите проблеми като предупреждения.",
			"javascript.implicitProjectConfig.checkJs": "Включване/изключване на семантичната проверка на файловете на JavaScript. Съществуващ файл „jsconfig.json“ или „tsconfig.json“ ще замени тази настройка. Изисква да се използва версия на TypeScript >= 2.3.1 в работното място.",
			"typescript.npm": "Посочва пътя до изпълнимия файл на NPM, който да се използва за автоматично усвояване на типове. Изисква да се използва версия на TypeScript >= 2.3.4 в работното място.",
			"typescript.check.npmIsInstalled": "Проверяване дали NPM е инсталирано за автоматично усвояване на типове.",
			"configuration.suggest.names": "Enable/disable including unique names from the file in JavaScript suggestions. Note that name suggestions are always disabled in JavaScript code that is semantically checked using `@ts-check` or `checkJs`.",
			"typescript.tsc.autoDetect": "Управлява автоматичното разпознаване на задачи на tsc.",
			"typescript.tsc.autoDetect.off": "Изключване на тази функционалност.",
			"typescript.tsc.autoDetect.on": "Създаване на задачи и за изграждане, и за наблюдение.",
			"typescript.tsc.autoDetect.build": "Създаване само на единични задачи за компилиране.",
			"typescript.tsc.autoDetect.watch": "Създаване само на задачи за компилиране и наблюдение.",
			"typescript.problemMatchers.tsc.label": "Проблеми в TypeScript",
			"typescript.problemMatchers.tscWatch.label": "Проблеми в TypeScript (режим на наблюдение)",
			"configuration.suggest.paths": "Включване/изключване на предложенията за пътища в декларациите „import“ и „require“.",
			"configuration.tsserver.useSeparateSyntaxServer": "Enable/disable spawning a separate TypeScript server that can more quickly respond to syntax related operations, such as calculating folding or computing document symbols. Requires using TypeScript 3.4.0 or newer in the workspace.",
			"configuration.tsserver.maxTsServerMemory": "Set the maximum amount of memory (in MB) to allocate to the TypeScript server process",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "(Experimental) Enables project wide error reporting.",
			"typescript.locale": "Задава езиковия идентификатор за докладване на грешки в JavaScript и TypeScript. Изисква да се използва версия на TypeScript >= 2.6.0 в работното място. Стойността по подразбиране е `null` и означава, че ще се използва езикът на VS Code.",
			"javascript.implicitProjectConfig.experimentalDecorators": "Включване/изключване на `experimentalDecorators` (експериментални декорации) за файловете на JavaScript, които не са част от проекта. Съществуващ файл „jsconfig.json“ или „tsconfig.json“ ще замени тази настройка. Изисква да се използва версия на TypeScript >= 2.3.1 в работното място.",
			"configuration.suggest.autoImports": "Включване/изключване на автоматичните предложения за внасяне чрез „import“. Изисква да се използва версия на TypeScript >= 2.6.1 в работното място.",
			"taskDefinition.tsconfig.description": "Файл „tsconfig“, който дефинира процеса на изграждане на TypeScript.",
			"javascript.suggestionActions.enabled": "Включване/изключване на диагностиката на предложенията в редактора за файлове на JavaScript. Изисква да се използва версия на TypeScript >= 2.8 в работното място.",
			"typescript.suggestionActions.enabled": "Включване/изключване на диагностиката на предложенията в редактора за файлове на TypeScript. Изисква да се използва версия на TypeScript >= 2.8 в работното място..",
			"typescript.preferences.quoteStyle": "Предпочитан вид кавички, които да се използват при бързи поправки. Възможни стойности: `single` – единични кавички, `double` – двойни кавички, `auto` – използване на същия вид кавички, които са използвани в съществуващите декларации `import`. Изисква да се използва версия на TypeScript >= 2.9 в работното място.",
			"typescript.preferences.importModuleSpecifier": "Предпочитан стил на пътя за автоматичните декларации „imports“.",
			"typescript.preferences.importModuleSpecifier.auto": "Automatically select import path style. Prefers using a relative import if `baseUrl` is configured and the relative path has fewer segments than the non-relative import.",
			"typescript.preferences.importModuleSpecifier.relative": "Относителен път до местоположението на файла.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Въз основа на настройката `baseUrl`, зададена в `jsconfig.json` / `tsconfig.json`.",
			"typescript.preferences.importModuleSpecifierEnding": "Preferred path ending for auto imports.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Use project settings to select a default.",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "Shorten `./component/index.js` to `./component`.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Shorten `./component/index.js` to `./component/index`",
			"typescript.preferences.importModuleSpecifierEnding.js": "Do not shorten path endings; include the `.js` extension.",
			"typescript.updateImportsOnFileMove.enabled": "Включване/изключване на автоматичното обновяване на пътища в декларации „import“ при преименуване или преместване на файл във VS Code. Изисква да се използва версия на TypeScript >= 2.9 в работното място.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Питане при всяко преименуване.",
			"typescript.updateImportsOnFileMove.enabled.always": "Пътищата винаги да се обновяват автоматично.",
			"typescript.updateImportsOnFileMove.enabled.never": "Пътищата никога да не се преименуват и да не се пита.",
			"typescript.autoClosingTags": "Включване/изключване на автоматичното затваряне на елементи на JSX . Изисква да се използва версия на TypeScript >= 3.0 в работното място.",
			"typescript.suggest.enabled": "Включване/изключване на предложенията за автоматично допълване.",
			"configuration.surveys.enabled": "Включване/изключване на периодичните проучвания, които ни помагат да подобряваме поддръжката на JavaScript и TypeScript във VS Code.",
			"configuration.suggest.completeJSDocs": "Enable/disable suggestion to complete JSDoc comments.",
			"configuration.tsserver.watchOptions": "Configure which watching strategies should be used to keep track of files and directories. Requires using TypeScript 3.8+ in the workspace.",
			"configuration.tsserver.watchOptions.watchFile": "Strategy for how individual files are watched.",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Check every file for changes several times a second at a fixed interval.",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Use a dynamic queue where less-frequently modified files will be checked less often.",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Attempt to use the operating system/file system’s native events for file changes.",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Attempt to use the operating system/file system’s native events to listen for changes on a file’s containing directories. This can use fewer file watchers, but might be less accurate.",
			"configuration.tsserver.watchOptions.watchDirectory": "Strategy for how entire directory trees are watched under systems that lack recursive file-watching functionality.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Check every directory for changes several times a second at a fixed interval.",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Use a dynamic queue where less-frequently modified directories will be checked less often.",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Attempt to use the operating system/file system’s native events for directory changes.",
			"configuration.tsserver.watchOptions.fallbackPolling": "When using file system events, this option specifies the polling strategy that gets used when the system runs out of native file watchers and/or doesn’t support native file watchers.",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Check every file for changes several times a second at a fixed interval.",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ": "Use a dynamic queue where less-frequently modified files will be checked less often.",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Disable deferred watching on directories. Deferred watching is useful when lots of file changes might occur at once (e.g. a change in node_modules from running npm install), but you might want to disable it with this flag for some less-common setups.",
			"typescript.preferences.renameShorthandProperties": "Enable/disable introducing aliases for object shorthand properties during renames. Requires using TypeScript 3.4 or newer in the workspace.",
			"codeActions.refactor.extract.constant.title": "Extract constant",
			"codeActions.refactor.extract.constant.description": "Extract expression to constant.",
			"codeActions.refactor.extract.function.title": "Extract function",
			"codeActions.refactor.extract.function.description": "Extract expression to method or function.",
			"codeActions.refactor.extract.type.title": "Extract type",
			"codeActions.refactor.extract.type.description": "Extract type to a type alias.",
			"codeActions.refactor.extract.interface.title": "Extract interface",
			"codeActions.refactor.extract.interface.description": "Extract type to an interface.",
			"codeActions.refactor.rewrite.import.title": "Convert import",
			"codeActions.refactor.rewrite.import.description": "Convert between named imports and namespace imports.",
			"codeActions.refactor.rewrite.export.title": "Convert export",
			"codeActions.refactor.rewrite.export.description": "Convert between default export and named export.",
			"codeActions.refactor.move.newFile.title": "Move to a new file",
			"codeActions.refactor.move.newFile.description": "Move the expression to a new file.",
			"codeActions.refactor.rewrite.arrow.braces.title": "Rewrite arrow braces",
			"codeActions.refactor.rewrite.arrow.braces.description": "Add or remove braces in an arrow function.",
			"codeActions.refactor.rewrite.parameters.toDestructured.title": "Convert parameters to destructured object",
			"codeActions.refactor.rewrite.property.generateAccessors.title": "Generate accessors",
			"codeActions.refactor.rewrite.property.generateAccessors.description": "Generate 'get' and 'set' accessors",
			"codeActions.source.organizeImports.title": "Организиране на декларациите „import“"
		},
		"dist/utils/api": {
			"invalidVersion": "неправилна версия"
		},
		"dist/utils/tsconfig": {
			"typescript.configureTsconfigQuickPick": "Настройване на на „tsconfig.json“",
			"typescript.configureJsconfigQuickPick": "Настройване на на „jsconfig.json“",
			"typescript.noTypeScriptProjectConfig": "Файлът не е част от проект на TypeScript. Натиснете [тук]({0}), за да научите повече.",
			"typescript.noJavaScriptProjectConfig": "Файлът не е част от проект на JavaScript. Натиснете [тук]({0}), за да научите повече.",
			"typescript.projectConfigNoWorkspace": "Моля, отворете папка във VS Code, за да използвате проект на TypeScript или JavaScript",
			"typescript.projectConfigUnsupportedFile": "Не може да се разпознае проект на TypeScript или JavaScript. Типът на файла не се поддържа.",
			"typescript.projectConfigCouldNotGetInfo": "Не може да се разпознае проекта на TypeScript или JavaScript"
		},
		"dist/features/baseCodeLensProvider": {
			"referenceErrorLabel": "Използванията не могат да бъдат определени"
		},
		"dist/features/completions": {
			"selectCodeAction": "Изберете действие, което да бъде извършено в кода",
			"acquiringTypingsLabel": "Усвояване на типовете…",
			"acquiringTypingsDetail": "Усвояване на дефинициите на типовете за разпознаване, оцветяване и предложения.",
			"autoImportLabel": "Автоматично внасяне чрез „import“ от „{0}“"
		},
		"dist/features/directiveCommentCompletions": {
			"ts-check": "Включва семантичната проверка във файл на JavaScript. Трябва да бъде най-отгоре във файла.",
			"ts-nocheck": "Изключва семантичната проверка във файл на JavaScript. Трябва да бъде най-отгоре във файла.",
			"ts-ignore": "Потиска грешките от тип „@ts-check“ за следващия ред във файла.",
			"ts-expect-error": "Suppresses @ts-check errors on the next line of a file, expecting at least one to exist."
		},
		"dist/features/implementationsCodeLens": {
			"oneImplementationLabel": "1 имплементация",
			"manyImplementationLabel": "{0} имплементации"
		},
		"dist/features/jsDocCompletions": {
			"typescript.jsDocCompletionItem.documentation": "Коментар на JSDoc"
		},
		"dist/features/organizeImports": {
			"organizeImportsAction.title": "Организиране на декларациите „import“"
		},
		"dist/features/quickFix": {
			"fixAllInFileLabel": "{0} (Поправяне на всички във файла)"
		},
		"dist/features/fixAll": {
			"autoFix.label": "Auto fix"
		},
		"dist/features/refactor": {
			"refactoringFailed": "Could not apply refactoring",
			"extractConstant.disabled.title": "Extract to constant",
			"extractConstant.disabled.reason": "The current selection cannot be extracted",
			"extractFunction.disabled.title": "Extract to function",
			"extractFunction.disabled.reason": "The current selection cannot be extracted",
			"refactor.documentation.title": "Learn more about JS/TS refactorings"
		},
		"dist/features/referencesCodeLens": {
			"oneReferenceLabel": "1 използване",
			"manyReferenceLabel": "{0} използвания"
		},
		"dist/features/rename": {
			"fileRenameFail": "Възникна грешка при преименуването на файл"
		},
		"dist/typescriptServiceClient": {
			"noServerFound": "Пътят „{0}“ не сочи към правилно инсталиран „tsserver“. Ще се използва вградената версия на TypeScript.",
			"serverExitedWithError": "Езиковият сървър за TypeScript спря и върна грешка. Съобщението за грешка е: {0}",
			"typescript.openTsServerLog.loggingNotEnabled": "Журналът на сървъра на TypeScript е изключен. Моля, задайте стойност в `typescript.tsserver.log` и рестартирайте сървъра на TypeScript, за да се включи журналът.",
			"typescript.openTsServerLog.enableAndReloadOption": "Включване на журнала и рестартиране на сървъра на TypeScript",
			"typescript.openTsServerLog.noLogFile": "Сървърът на TypeScript не е започнал да пише в журнала.",
			"openTsServerLog.openFileFailedFailed": "Файлът с журнала на сървъра на TypeScript не може да бъде отворен",
			"serverDiedReportIssue": "Докладване на проблем",
			"serverDiedAfterStart": "Услугата за езика TypeScript се срина 5 пъти веднага след стартиране. Услугата няма да бъде рестартирана повече.",
			"serverDied": "Услугата за езика TypeScript се срина неочаквано 5 пъти в последните 5 минути.",
			"serverDiedOnce": "The TypeScript language service died unexpectedly.",
			"serverLoading.progress": "Инициализиране на функционалностите за JavaScript/TypeScript"
		},
		"dist/utils/logger": {
			"channelName": "TypeScript"
		},
		"dist/utils/versionManager": {
			"selectTsVersion": "Изберете версията на TypeScript, която да се използва за функционалностите специфични за JavaScript и TypeScript",
			"useVSCodeVersionOption": "Използване на версията на VS Code",
			"useWorkspaceVersionOption": "Използване на версията на работното място",
			"learnMore": "Learn more about managing TypeScript versions"
		},
		"dist/utils/versionProvider": {
			"couldNotLoadTsVersion": "Версията на TypeScript от това местоположение не може да бъде заредена",
			"noBundledServerFound": "Програмата „tsserver“ на VS Code е била изтрита от друга програма, като например неправилно работеща антивирусна програма. Моля, преинсталирайте VS Code."
		},
		"dist/utils/typingsStatus": {
			"installingPackages": "Получаване на данните за по-добро разпознаване, оцветяване и предложения за TypeScript",
			"typesInstallerInitializationFailed.title": "Файловете с дефинициите на типовете не могат да бъдат инсталирани, за да се използват функционалностите специфични за JavaScript. Моля, уверете се, че NPM е инсталирано или настройте променливата „typescript.npm“ в потребителските си настройки. Натиснете [тук]({0}), за да научите повече.",
			"typesInstallerInitializationFailed.doNotCheckAgain": "Да не се показва повече"
		},
		"dist/utils/versionStatus": {
			"projectQuickPick.placeholder": "TypeScript Project Info",
			"projectQuickPick.version.label": "Select TypeScript Version...",
			"projectQuickPick.project.create": "Create tsconfig",
			"projectQuickPick.project.create.description": "This file is currently not part of a tsconfig/jsconfig project",
			"projectQuickPick.version.goProjectConfig": "Open tsconfig",
			"projectQuickPick.help": "TypeScript help",
			"projectInfo.name": "TypeScript: Project Info"
		},
		"dist/features/updatePathsOnRename": {
			"renameProgress.title": "Checking for update of JS/TS imports",
			"prompt": "Update imports for '{0}'?",
			"promptMoreThanOne": "Update imports for the following {0} files?",
			"reject.title": "Не",
			"accept.title": "Да",
			"always.title": "Декларациите „import“ винаги да се обновяват автоматично",
			"never.title": "Декларациите „import“ никога да не се обновяват автоматично",
			"moreFile": "…има още 1 файл, който не е показан",
			"moreFiles": "…има още {0} файла, които не са показани"
		},
		"dist/utils/largeProjectStatus": {
			"statusExclude": "TypeScript: Configure Excludes",
			"hintExclude": "За да включите функционалностите специфични за JavaScript/TypeScript за целия проект, изключете папките с много файлове като: {0}",
			"hintExclude.generic": "За да включите функционалностите специфични за JavaScript/TypeScript за целия проект, изключете големите папки с файлове с изходен код, върху които не работите.",
			"large.label": "Настройка на изключванията",
			"hintExclude.tooltip": "За да включите функционалностите специфични за JavaScript/TypeScript за целия проект, изключете големите папки с файлове с изходен код, върху които не работите."
		},
		"dist/features/task": {
			"badTsConfig": "TypeScript Task in tasks.json contains \"\\\\\". TypeScript tasks tsconfig must use \"/\"",
			"buildTscLabel": "компилиране – {0}",
			"buildAndWatchTscLabel": "наблюдение – {0}"
		}
	}
}