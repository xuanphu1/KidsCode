{"version":3,"file":"801.js","mappings":"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","sources":["webpack:///../../actions-runner/_work/arduino-ide/arduino-ide/node_modules/ip-regex/index.js?","webpack:///../../actions-runner/_work/arduino-ide/arduino-ide/node_modules/public-ip/browser.js?","webpack:///../../actions-runner/_work/arduino-ide/arduino-ide/node_modules/is-online/browser.js?","webpack:///../../actions-runner/_work/arduino-ide/arduino-ide/node_modules/is-ip/index.js?"],"sourcesContent":["'use strict';\n\nconst word = '[a-fA-F\\\\d:]';\nconst b = options => options && options.includeBoundaries ?\n\t`(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))` :\n\t'';\n\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\nconst v6seg = '[a-fA-F\\\\d]{1,4}';\nconst v6 = `\n(?:\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6seg}:){5}(?::${v4}|(?::${v6seg}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6seg}:){4}(?:(?::${v6seg}){0,1}:${v4}|(?::${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6seg}:){3}(?:(?::${v6seg}){0,2}:${v4}|(?::${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6seg}:){2}(?:(?::${v6seg}){0,3}:${v4}|(?::${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6seg}:){1}(?:(?::${v6seg}){0,4}:${v4}|(?::${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\n\n// Pre-compile only the exact regexes because adding a global flag make regexes stateful\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\nconst v4exact = new RegExp(`^${v4}$`);\nconst v6exact = new RegExp(`^${v6}$`);\n\nconst ip = options => options && options.exact ?\n\tv46Exact :\n\tnew RegExp(`(?:${b(options)}${v4}${b(options)})|(?:${b(options)}${v6}${b(options)})`, 'g');\n\nip.v4 = options => options && options.exact ? v4exact : new RegExp(`${b(options)}${v4}${b(options)}`, 'g');\nip.v6 = options => options && options.exact ? v6exact : new RegExp(`${b(options)}${v6}${b(options)}`, 'g');\n\nmodule.exports = ip;\n","import isIp from 'is-ip';\n\nexport class CancelError extends Error {\n\tconstructor() {\n\t\tsuper('Request was cancelled');\n\t\tthis.name = 'CancelError';\n\t}\n\n\tget isCanceled() {\n\t\treturn true;\n\t}\n}\n\nexport class IpNotFoundError extends Error {\n\tconstructor(options) {\n\t\tsuper('Could not get the public IP address', options);\n\t\tthis.name = 'IpNotFoundError';\n\t}\n}\n\nconst defaults = {\n\ttimeout: 5000,\n};\n\nconst urls = {\n\tv4: [\n\t\t'https://ipv4.icanhazip.com/',\n\t\t'https://api.ipify.org/',\n\t],\n\tv6: [\n\t\t'https://ipv6.icanhazip.com/',\n\t\t'https://api6.ipify.org/',\n\t],\n};\n\nconst sendXhr = (url, options, version) => {\n\tconst xhr = new XMLHttpRequest();\n\n\tlet _reject;\n\tconst promise = new Promise((resolve, reject) => {\n\t\t_reject = reject;\n\t\txhr.addEventListener('error', reject, {once: true});\n\t\txhr.addEventListener('timeout', reject, {once: true});\n\n\t\txhr.addEventListener('load', () => {\n\t\t\tconst ip = xhr.responseText.trim();\n\n\t\t\tif (!ip || !isIp[version](ip)) {\n\t\t\t\treject();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolve(ip);\n\t\t}, {once: true});\n\n\t\txhr.open('GET', url);\n\t\txhr.timeout = options.timeout;\n\t\txhr.send();\n\t});\n\n\tpromise.cancel = () => {\n\t\txhr.abort();\n\t\t_reject(new CancelError());\n\t};\n\n\treturn promise;\n};\n\nconst queryHttps = (version, options) => {\n\tlet request;\n\tconst promise = (async function () {\n\t\tconst urls_ = [\n\t\t\t...urls[version],\n\t\t\t...(options.fallbackUrls ?? []),\n\t\t];\n\n\t\tlet lastError;\n\t\tfor (const url of urls_) {\n\t\t\ttry {\n\t\t\t\trequest = sendXhr(url, options, version);\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tconst ip = await request;\n\t\t\t\treturn ip;\n\t\t\t} catch (error) {\n\t\t\t\tlastError = error;\n\n\t\t\t\tif (error instanceof CancelError) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new IpNotFoundError({cause: lastError});\n\t})();\n\n\tpromise.cancel = () => {\n\t\trequest.cancel();\n\t};\n\n\treturn promise;\n};\n\nconst publicIp = {};\n\npublicIp.v4 = options => queryHttps('v4', {...defaults, ...options});\n\npublicIp.v6 = options => queryHttps('v6', {...defaults, ...options});\n\nexport default publicIp;\n","/* eslint-env browser */\nimport publicIp from 'public-ip';\n\nexport default async function isOnline(options) {\n\toptions = {\n\t\ttimeout: 5000,\n\t\tipVersion: 4,\n\t\t...options,\n\t};\n\n\tif (!navigator?.onLine) {\n\t\treturn false;\n\t}\n\n\tconst publicIpFunctionName = options.ipVersion === 4 ? 'v4' : 'v6';\n\n\ttry {\n\t\tawait publicIp[publicIpFunctionName](options);\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n}\n","'use strict';\nconst ipRegex = require('ip-regex');\n\nconst isIp = string => ipRegex({exact: true}).test(string);\nisIp.v4 = string => ipRegex.v4({exact: true}).test(string);\nisIp.v6 = string => ipRegex.v6({exact: true}).test(string);\nisIp.version = string => isIp(string) ? (isIp.v4(string) ? 4 : 6) : undefined;\n\nmodule.exports = isIp;\n"],"names":["word","b","options","includeBoundaries","v4","v6seg","v6","replace","trim","v46Exact","RegExp","v4exact","v6exact","ip","exact","module","exports","CancelError","Error","constructor","super","this","name","isCanceled","IpNotFoundError","defaults","timeout","urls","sendXhr","url","version","xhr","XMLHttpRequest","_reject","promise","Promise","resolve","reject","addEventListener","once","responseText","open","send","cancel","abort","queryHttps","request","urls_","fallbackUrls","lastError","error","cause","publicIp","async","isOnline","ipVersion","navigator","onLine","publicIpFunctionName","ipRegex","isIp","string","test","undefined"],"sourceRoot":""}