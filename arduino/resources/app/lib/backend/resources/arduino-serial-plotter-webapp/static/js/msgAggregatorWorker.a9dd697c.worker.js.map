{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","msgAggregatorWorker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_arrayLikeToArray","arr","len","length","arr2","Array","_slicedToArray","isArray","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","minLen","toString","slice","constructor","from","test","TypeError","ctx","self","addEventListener","event","data","command","message","buffer","discardFirstLine","postMessage","parseSerialMessages","separatorRegex","RegExp","delimiterRegex","messages","joinMessages","join","lastIndex","separatorMatch","exec","index","datasetNames","parsedLines","substring","messagesAndBuffer","split","filter","splice","forEach","parsedLine","tokens","indexOf","keyValue","trim","varName","varValue","parseFloat","keys"],"mappings":"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","file":"static/js/msgAggregatorWorker.a9dd697c.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Worker.ts\n// eslint-disable-next-line no-restricted-globals\nconst ctx: Worker = self as any;\n\n// Respond to message from parent thread\nctx.addEventListener(\"message\", (event) => {\n  const { command, message } = event.data;\n\n  if (command === \"cleanup\") {\n    buffer = \"\";\n    discardFirstLine = true;\n  }\n\n  if (message) {\n    ctx.postMessage(parseSerialMessages(message));\n  }\n});\n\nlet buffer = \"\";\nlet discardFirstLine = true;\nconst separator = \"\\r?\\n\";\nconst delimiter = \"[, \\t]+\"; // Serial Plotter protocol supports Comma, Space & Tab characters as delimiters\nvar separatorRegex = new RegExp(`(${separator})`, \"g\");\nvar delimiterRegex = new RegExp(delimiter, \"g\");\n\nexport const parseSerialMessages = (\n  messages: string[]\n): {\n  datasetNames: string[];\n  parsedLines: { [key: string]: number }[];\n} => {\n  // when the serial is real fast, the first line can be incomplete and contain incomplete messages\n  // so we need to discard it and start aggregating from the first encountered separator\n  let joinMessages = messages.join(\"\");\n  if (discardFirstLine) {\n    separatorRegex.lastIndex = 0; // Reset lastIndex to ensure match happens from beginning of string\n    const separatorMatch = separatorRegex.exec(joinMessages);\n    if (separatorMatch && separatorMatch.index > -1) {\n      joinMessages = joinMessages.substring(\n        separatorMatch.index + separatorMatch[0].length\n      );\n      discardFirstLine = false;\n    } else {\n      return {\n        datasetNames: [],\n        parsedLines: [],\n      };\n    }\n  }\n\n  //add any leftover from the buffer to the first line\n  const messagesAndBuffer = ((buffer || \"\") + joinMessages)\n    .split(separatorRegex)\n    .filter((message) => message.length > 0);\n\n  // remove the previous buffer\n  buffer = \"\";\n  separatorRegex.lastIndex = 0;\n  // check if the last message contains the delimiter, if not, it's an incomplete string that needs to be added to the buffer\n  if (!separatorRegex.test(messagesAndBuffer[messagesAndBuffer.length - 1])) {\n    buffer = messagesAndBuffer[messagesAndBuffer.length - 1];\n    messagesAndBuffer.splice(-1);\n  }\n\n  const datasetNames: { [key: string]: boolean } = {};\n  const parsedLines: { [key: string]: number }[] = [];\n\n  // for each line, explode variables\n  separatorRegex.lastIndex = 0;\n  messagesAndBuffer\n    .filter((message) => !separatorRegex.test(message))\n    .forEach((message) => {\n      const parsedLine: { [key: string]: number } = {};\n\n      // Part Separator symbols i.e. Space, Tab & Comma are fully supported\n      // SerialPlotter protocol specifies 3 message formats. The following 2 formats are supported\n      // Value only format: <value1> <value2> <value3>\n      // Label-Value format: name1:<value1>,name2:<value2>,name3:<value3>\n\n      // if we find a colon, we assume the latter is being used\n      let tokens: string[] = [];\n      if (message.indexOf(\":\") > 0) {\n        message.split(delimiterRegex).forEach((keyValue: string) => {\n          let [key, value] = keyValue.split(\":\");\n          key = key && key.trim();\n          value = value && value.trim();\n          if (key && key.length > 0 && value && value.length > 0) {\n            tokens.push(...[key, value]);\n          }\n        });\n      } else {\n        // otherwise they are unlabelled\n        const values = message.split(delimiterRegex);\n        values.forEach((value, i) => {\n          if (value.length) {\n            tokens.push(...[`value ${i + 1}`, value]);\n          }\n        });\n      }\n\n      for (let i = 0; i < tokens.length - 1; i = i + 2) {\n        const varName = tokens[i];\n        const varValue = parseFloat(tokens[i + 1]);\n\n        //skip line endings\n        if (varName.length === 0) {\n          continue;\n        }\n\n        // add the variable to the map of variables\n        datasetNames[varName] = true;\n\n        parsedLine[varName] = varValue;\n      }\n      parsedLines.push(parsedLine);\n    });\n\n  return { parsedLines, datasetNames: Object.keys(datasetNames) };\n};\n\nexport {};\n"],"sourceRoot":""}